from flask import Flask, render_template
import numpy as np
import matplotlib.pyplot as plt
import io
import base64
from scipy.stats import linregress

app = Flask(__name__)

def generate_plot():
    # Datos de ejemplo
    X = np.array([
        37.45401188, 95.07143064, 73.19939418, 59.86584842, 15.60186404, 15.59945203,
        5.808361217, 86.61761458, 60.11150117, 70.80725778, 2.05844943, 96.99098522,
        83.24426408, 21.23391107, 18.18249672, 18.34045099, 30.4242243, 52.47564316,
        43.19450186, 29.12291402, 61.18528947, 13.94938607, 29.21446485, 36.63618433,
        45.60699842, 78.51759614, 19.96737822, 51.42344384, 59.24145689, 4.645041272,
        60.75448519, 17.05241237, 6.505159299, 94.88855373, 96.56320331, 80.83973481,
        30.46137692, 9.767211401, 68.42330265, 44.01524937, 12.20382348, 49.51769101,
        3.438852112, 90.93204021, 25.87799816, 66.25222844, 31.17110761, 52.00680212,
        54.67102793, 18.48544555, 96.95846278, 77.51328234, 93.94989416, 89.48273504,
        59.78999788, 92.1874235, 8.849250205, 19.59828624, 4.522728891, 32.53303308,
        38.86772897, 27.13490318, 82.87375092, 35.67533267, 28.09345097, 54.26960832,
        14.0924225, 80.21969808, 7.455064368, 98.68869366, 77.22447693, 19.87156815,
        0.552211712, 81.54614285, 70.68573438, 72.9007168, 77.12703467, 7.404465173,
        35.84657285, 11.58690595, 86.31034259, 62.32981268, 33.08980249, 6.355835029,
        31.09823217, 32.5183322, 72.96061783, 63.75574714, 88.72127426, 47.22149252,
        11.95942459, 71.32447872, 76.07850486, 56.12771976, 77.096718, 49.37955964,
        52.27328294, 42.75410184, 2.541912674, 10.7891427
    ])
    Y = np.array([
        123.8333414, 236.6492425, 203.9940738, 119.3503668, 72.81609289, 76.76992906,
        56.55541736, 210.8065669, 150.8614064, 180.1436294, 45.35768469, 267.4099608,
        203.7336017, 91.51002136, 80.77814216, 88.165762, 97.5351483, 147.8809309,
        127.5756609, 85.31681004, 182.579647, 72.29093608, 104.3375529, 116.8180794,
        111.9330396, 198.2063653, 80.91726351, 134.978998, 166.1270929, 51.04489728,
        224.0813389, 78.82517527, 55.04852924, 245.6466295, 170.9146615, 216.9043317,
        107.8222951, 72.07382792, 184.7399979, 142.6735285, 66.66202049, 123.4760155,
        49.29467405, 270.1354026, 105.9385382, 159.2453666, 127.8161638, 122.3364167,
        174.3932569, 98.48426143, 211.0506312, 191.215159, 250.8091506, 217.0389705,
        130.7437635, 245.5934151, 55.33209025, 87.20013374, 48.12034868, 133.7592624,
        112.113962, 95.85157944, 251.9867102, 99.16467453, 104.6172513, 190.6059134,
        61.03586302, 223.0002956, 57.25361651, 291.0642403, 167.8637857, 72.17205076,
        41.34168356, 230.0574143, 203.2993749, 211.494359, 186.6022285, 57.04649772,
        123.4849435, 61.84925911, 300.7384341, 190.1205115, 95.4527666, 55.81893349,
        95.07932495, 122.8019894, 237.7073729, 157.2404294, 272.7944648, 152.4638214,
        70.63653536, 256.4404723, 199.1584559, 144.8665669, 179.4381766, 130.909916,
        153.2278643, 140.4767084, 45.90167038, 67.66293711
    ])

   
    slope, intercept, _, _, _ = linregress(X, Y)

   
    X_pred = np.linspace(min(X), max(X), 100)
    Y_pred = slope * X_pred + intercept

   
    plt.figure(figsize=(6,4))
    plt.scatter(X, Y, color="blue", label="Datos reales")
    plt.plot(X_pred, Y_pred, color="red", label="Regresión Lineal")
    plt.xlabel("X")
    plt.ylabel("Y")
    plt.legend()
    plt.title("Regresión Lineal")

    
    img = io.BytesIO()
    plt.savefig(img, format='png')
    img.seek(0)

   
    plot_url = base64.b64encode(img.getvalue()).decode()
    return plot_url

@app.route('/')
def index():
    image_data = generate_plot()
    return render_template('index.html', image_data=image_data)

if __name__ == '__main__':
    app.run(debug=True)
